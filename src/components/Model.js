/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef, useState } from "react";
import * as THREE from 'three';
import { useGLTF } from "@react-three/drei";
import { TextureLoader } from 'three/src/loaders/TextureLoader'
import { Canvas, useLoader } from '@react-three/fiber'
export default function Model(props) {
    const { nodes, materials } = useGLTF("/mail.gltf");
    const colorMap = useLoader(TextureLoader, 'maintest.png')
    const [scale, setScale] = useState(1)

    return (
        <group {...props} dispose={null}>
            <ambientLight intensity={0.1} />
            <directionalLight />
            <mesh
                onPointerEnter={() => setScale(1.4)}
                onPointerLeave={() => setScale(1)}
                scale={scale}
                castShadow
                receiveShadow
                rotation={new THREE.Euler(Math.PI / 2, 0, 0)}
                geometry={nodes.Main.geometry}
                material={materials.lambert7SG2}
            // position={new THREE.Vector3(0, -100, -200)}
            >
                <meshStandardMaterial map={colorMap} />
            </mesh>
        </group>
    );
}

useGLTF.preload("/mail.gltf");